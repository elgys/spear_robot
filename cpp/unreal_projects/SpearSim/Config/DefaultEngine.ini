;
; Copyright(c) 2022 Intel. Licensed under the MIT License <http://opensource.org/licenses/MIT>.
;

[Core.System]
; This parameter disables the warning:
;    Warning: Asset '../../../../../../path/to/Some.uasset' has been saved with empty engine version. The asset will
;    be loaded but may be incompatible.
ZeroEngineVersionWarning=False

[/Script/Engine.Engine]
; These settings get added by default to a blank Unreal project.
+ActiveGameNameRedirects=(OldGameName="TP_Blank",NewGameName="/Script/SpearSim")
+ActiveGameNameRedirects=(OldGameName="/Script/TP_Blank",NewGameName="/Script/SpearSim")
+ActiveClassRedirects=(OldClassName="TP_BlankGameModeBase",NewClassName="SpearSimGameMode")

[/Script/Engine.PhysicsSettings]
bEnableEnhancedDeterminism=True
bSubstepping=True
MaxSubstepDeltaTime=0.01
MaxSubsteps=100

[/Script/Engine.RendererSettings]
r.CustomDepth=3                 ; r.CustomDepth=3 enables a custom depth-stencil pass with stencil enabled
r.DefaultFeature.AntiAliasing=1 ; r.DefaultFeature.AntiAliasing=1 enables FXAA

; Start using an exponential decay model to get closer to a desired brightness, rather than a linear decay model,
; when the difference between the desired brightness and the current brightness is less than or equal to this value,
; as measured in f-stops. We would prefer to always use the linear model, but if we set this parameter to 0.0, then
; we will transition to the exponential model when the current brightness is equal to the desired brightness. This
; will lead to rendering artifacts, because the exponential model ends up dividing by this value, and will therefore
; divide by zero.
r.EyeAdaptation.ExponentialTransitionDistance=0.1

; Disable texture streaming, so we can teleport the camera and render high-resolution images reliably.
r.TextureStreaming=False

[/Script/EngineSettings.GameMapsSettings]
GameDefaultMap=/Game/Scenes/starter_content_0000/Maps/starter_content_0000.starter_content_0000
EditorStartupMap=/Game/Scenes/starter_content_0000/Maps/starter_content_0000.starter_content_0000
GlobalDefaultGameMode=/Script/SpearSim.SpearSimGameMode

[/Script/HardwareTargeting.HardwareTargetingSettings]
; These settings get added by default to a blank Unreal project.
TargetedHardwareClass=Desktop
AppliedTargetedHardwareClass=Desktop
DefaultGraphicsPerformance=Maximum
AppliedDefaultGraphicsPerformance=Maximum

[/Script/NavigationSystem.RecastNavMesh]
bAutoDestroyWhenNoNavigation=False
bForceRebuildOnLoad=True
RuntimeGeneration=Dynamic

[/Script/UnrealEd.CookerSettings]
cook.displaymode=3 ; cook.displaymode=3 shows the names of all assets as they're being cooked

[SystemSettings]
; Console variables for syncing physics work (on the game thread), and rendering work (on the rendering
; thread, the RHI thread, and the GPU).
;
; r.OneFrameThreadLag controls whether or not physics work and rendering work is overlapped. If
; r.OneFrameThreadLag=1, then physics and rendering work is overlapped, and both physics and rendering begin
; immediately when a frame begins. This is possible because the rendering thread will render physics data from
; a previous frame. If r.OneFrameThreadLag=0, then rendering work will not begin until all physics work is
; finished. This reduces latency, but also reduces CPU and GPU throughput since physics and rendering are
; executing sequentially, rather than in parallel. Moreover, r.OneFrameThreadLag=0 makes it so the overall
; frame time is more sensitive to the amount of rendering work that needs to be done, which can vary a lot.
;
; r.GTSyncType controls exactly what the game thread waits for when synchronizing with rendering work. If
; r.GTSyncType=0, then the game thread will sync with the rendering thread (not the RHI thread). In this case,
; according to the Unreal documentation, it is possible for the game thread and the rendering thread "to get
; much further ahead of the GPU". If r.GTSyncType=1, then the game thread will sync with the RHI thread, and
; therefore the game thread will always stay zero frames ahead (if r.OneFrameThreadLag=0) or one frame ahead
; of the RHI thread. If r.GTSyncType=2, then the game thread will sync with "the swap chain present +/- an
; offset in milliseconds".
;
; For more information on r.OneFrameThreadLag and r.GTSyncType, see:
;     http://docs.unrealengine.com/en-US/SharingAndReleasing/LowLatencyFrameSyncing/index.html
r.OneFrameThreadLag=0
r.GTSyncType=1
